[project]
name = "{{cookiecutter.project_name}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
dependencies = [
    {%- if cookiecutter.pydata == 'y' %}
    "polars>=1.32.3",
    "pyarrow>=21.0.0",
    "seaborn>=0.13.2",
    "numpy>=2.0.2",
    {%- endif %}
    {%- if cookiecutter.quarto == 'y' and cookiecutter.pydata == 'y' %}
    "ipykernel>=6.30.1", # quarto needs to render / quarto extension needs to run python notebooks
    "nbformat>=5.10.4",  # quarto needs to render python notebooks
    "nbclient>=0.10.2",  # quarto needs to render python notebooks
    {%- endif %}
    {%- if cookiecutter.jupyter == 'y' %}
    "jupyter>=1.1.1",
    {%- endif %}
    {%- if cookiecutter.aws == 'y' %}
    "boto3>=1.7.84",
    {%- endif %}
]
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
Homepage = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
Documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "ruff>=0.11.5",
    {%- if cookiecutter.type_checker == "mypy" %}
    "mypy>=0.991",
    {%- elif cookiecutter.type_checker == "ty" %}
    "ty>=0.0.1a16",
    {%- endif %}
    {%- if cookiecutter.deptry == 'y' %}
    "deptry>=0.23.0",
    {%- endif %}
    {%- if cookiecutter.mkdocs == 'y' %}
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    {%- endif %}
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["{{cookiecutter.project_slug}}"]

{% if cookiecutter.type_checker == "mypy" -%}
[tool.mypy]
files = [
    "{{cookiecutter.project_slug}}"
]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
{%- else -%}
[tool.ty.environment]
python = "./.venv"
python-version = "3.13"
{%- endif %}

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true
